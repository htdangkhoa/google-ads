name: Generate google ads api

on:
  workflow_call:
    inputs:
      node-version:
        description: 'The node version to use'
        required: true
        type: string
      google-ads-api-version:
        description: 'The google ads api version to use'
        required: true
        type: string
      test:
        description: 'Whether to test'
        required: false
        type: boolean
        default: false
      build:
        description: 'Whether to build the bundle'
        required: false
        type: boolean
        default: false
      import-suffix:
        description: 'ts-proto will emit file imports using the specified suffix'
        required: false
        type: string
        default: ''

jobs:
  generate:
    name: Generate google ads api ${{ inputs.google-ads-api-version }} for Node ${{ inputs.node-version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install protobuf-compiler
        run: |
          sudo apt-get update -y
          sudo apt-get install protobuf-compiler -y

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --prefer-offline

      - name: Generate google ads api from protos
        run: yarn generate ${{ inputs.google-ads-api-version }} ${{ inputs.import-suffix }}

      - name: Test
        if: ${{ inputs.test }}
        run: yarn test --coverage

      - name: Write COVERALLS_TOKEN to .coveralls.yml
        if: ${{ inputs.test }}
        run: |
          echo repo_token: ${{ secrets.COVERALLS_TOKEN }} > .coveralls.yml

      - name: Coveralls
        if: ${{ inputs.test }}
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: node-${{ inputs.node-version }}
          parallel: true

      - name: Build
        if: ${{ inputs.build }}
        run: yarn build

      - name: Create build artifact
        if: ${{ inputs.build }}
        uses: actions/upload-artifact@v4
        with:
          name: build ${{ inputs.node-version }}
          path: dist